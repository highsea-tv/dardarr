import chokidar from 'chokidar'
import { glob } from 'glob'
import { writeFile } from 'node:fs/promises'
import { basename, resolve } from 'node:path'
import prettier from 'prettier'

( async () => {

    const localesDir = resolve(process.cwd(), './packages/locales')
    const themesDir = resolve(process.cwd(), './packages/themes')

    chokidar.watch([localesDir], { ignored: ['**/package.json'] }).on('all', async (event, path) => {

        if (['add', 'change', 'unlink'].includes(event)) {

            if (path.includes(localesDir)) {
                await generateLocaleImports()
            }

        }

    })

    async function generateLocaleImports() {

        const localeFiles = await glob(resolve(localesDir, '*.json'), { ignore: ['**/package.json'] })
        const outputFilePath = resolve(localesDir, 'index.ts')

        let output = `
        /**
         * This file was automatically generated by \`scripts/generate-imports.js\`
         * Do not edit this file manually. Any manual changes will be overwritten.
         */\n\n`

        for (const localeFile of localeFiles) {
            const locale = basename(localeFile).replace('.json', '')
            output += `import ${locale} from '@packages/locales/${locale}.json'\n`
        }

        output += `\nexport const locales = {\n`

        for (const localeFile of localeFiles) {
            const locale = basename(localeFile).replace('.json', '')
            output += `    ${locale},\n`
        }

        output += `} as const\n`

        const formattedOutput = await prettier.format(output, { parser: 'typescript' })
        await writeFile(outputFilePath, formattedOutput, 'utf-8')

    }

})()
