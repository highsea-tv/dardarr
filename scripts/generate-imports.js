import chokidar from 'chokidar'
import { glob } from 'glob'
import { writeFile } from 'node:fs/promises'
import { basename, dirname, resolve } from 'node:path'
import prettier from 'prettier'

( async () => {

    const localesDir = resolve(process.cwd(), './packages/locales/*json')
    const themesDir = resolve(process.cwd(), './packages/themes/*.json')

    chokidar.watch([localesDir, themesDir], { ignored: ['**/package.json'] }).on('all', async (event, path) => {
        if (['add', 'change', 'unlink'].includes(event)) {
            await generateLocaleImports(path)
            await generateThemeImports(path)
        }
    })

    async function generateLocaleImports(path) {

        const pathDirname = dirname(path)
        const localesDirname = dirname(localesDir)

        if (pathDirname === localesDirname) {

            const localeFiles = await glob(localesDir, { ignore: ['**/package.json'] })
            const outputFilePath = resolve(localesDirname, 'index.ts')

            let output = `
            /**
             * This file was automatically generated by \`scripts/generate-imports.js\`
             * Do not edit this file manually. Any manual changes will be overwritten.
             */\n\n`

            for (const localeFile of localeFiles) {
                const locale = basename(localeFile).replace('.json', '')
                output += `import ${locale} from '@packages/locales/${locale}.json'\n`
            }

            output += `\nexport const locales = {\n`

            for (const localeFile of localeFiles) {
                const locale = basename(localeFile).replace('.json', '')
                output += `    ${locale},\n`
            }

            output += `} as const\n`

            const formattedOutput = await prettier.format(output, { parser: 'typescript' })
            await writeFile(outputFilePath, formattedOutput, 'utf-8')
            
        }

    }

    async function generateThemeImports(path) {

        const pathDirname = dirname(path)
        const themesDirname = dirname(themesDir)

        if (pathDirname === themesDirname) {

            const themeFiles = await glob(themesDir, { ignore: ['**/package.json'] })
            const outputFilePath = resolve(themesDirname, 'index.ts')

            let output = `
            /**
             * This file was automatically generated by \`scripts/generate-imports.js\`
             * Do not edit this file manually. Any manual changes will be overwritten.
             */\n\n`

            for (const themeFile of themeFiles) {
                const theme = basename(themeFile).replace('.json', '')
                output += `import ${theme} from '@packages/themes/${theme}.json'\n`
            }

            output += `\nexport const themes = {\n`

            for (const themeFile of themeFiles) {
                const theme = basename(themeFile).replace('.json', '')
                output += `    ${theme},\n`
            }

            output += `} as const\n`

            const formattedOutput = await prettier.format(output, { parser: 'typescript' })
            await writeFile(outputFilePath, formattedOutput, 'utf-8')
            
        }

    }

})()
